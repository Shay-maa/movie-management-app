/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import {HttpClient, HttpContext, HttpResponse} from '@angular/common/http';
import {Observable} from 'rxjs';
import {filter, map} from 'rxjs/operators';
import {StrictHttpResponse} from '../../strict-http-response';
import {RequestBuilder} from '../../request-builder';

import {PageMovie} from '../../models/page-movie';

export interface GetMovies$Params {

  /**
   * Zero-based page index (0..N)
   */
  page?: number;

  /**
   * The size of the page to be returned
   */
  size?: number;

  /**
   * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
   */
  sort?: Array<string>;
}

export function getMovies(http: HttpClient, rootUrl: string, params?: GetMovies$Params, context?: HttpContext): Observable<StrictHttpResponse<PageMovie>> {
  const rb = new RequestBuilder(rootUrl, getMovies.PATH, 'get');
  if (params) {
    rb.query('page', params.page, {});
    rb.query('size', params.size, {});
    rb.query('sort', params.sort, {});
  }

  return http.request(
    rb.build({responseType: 'json', accept: '*/*', context})
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<PageMovie>;
    })
  );
}

getMovies.PATH = '/api/v1/movies/get-movies';
